
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 4123509d24aa4dede1e864b46351bf2790323b69
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "4123509d24aa4dede1e864b46351bf2790323b69"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Detalle_facturaScalarFieldEnum = {
  id_detalle: 'id_detalle',
  id_factura: 'id_factura',
  id_materia_prima: 'id_materia_prima',
  cantidad: 'cantidad',
  precio_unitario: 'precio_unitario',
  subtotal: 'subtotal',
  unidad_medida: 'unidad_medida'
};

exports.Prisma.FacturasScalarFieldEnum = {
  id_factura: 'id_factura',
  id_proveedor: 'id_proveedor',
  id_moneda: 'id_moneda',
  fecha_factura: 'fecha_factura',
  total: 'total',
  estado: 'estado',
  observaciones: 'observaciones'
};

exports.Prisma.ConversionFactorScalarFieldEnum = {
  id: 'id',
  unidadOrigen: 'unidadOrigen',
  unidadDestino: 'unidadDestino',
  factorConversion: 'factorConversion'
};

exports.Prisma.Kardex_materia_primaScalarFieldEnum = {
  id_kardex: 'id_kardex',
  id_materia_prima: 'id_materia_prima',
  tipo_movimiento: 'tipo_movimiento',
  cantidad: 'cantidad',
  saldo: 'saldo',
  costo_unitario: 'costo_unitario',
  costo_total: 'costo_total',
  fecha_movimiento: 'fecha_movimiento',
  referencia: 'referencia',
  observaciones: 'observaciones'
};

exports.Prisma.Kardex_productosScalarFieldEnum = {
  id_kardex: 'id_kardex',
  id_producto: 'id_producto',
  tipo_movimiento: 'tipo_movimiento',
  cantidad: 'cantidad',
  saldo: 'saldo',
  costo_produccion: 'costo_produccion',
  precio_venta: 'precio_venta',
  fecha_movimiento: 'fecha_movimiento',
  referencia: 'referencia',
  observaciones: 'observaciones'
};

exports.Prisma.Materia_primaScalarFieldEnum = {
  id_materia_prima: 'id_materia_prima',
  nombre: 'nombre',
  unidad_medida_id: 'unidad_medida_id',
  costo_unitario: 'costo_unitario',
  presentacion: 'presentacion',
  stock_actual: 'stock_actual',
  codigo_barras: 'codigo_barras',
  fecha_registro: 'fecha_registro',
  disponible: 'disponible'
};

exports.Prisma.MonedasScalarFieldEnum = {
  id_moneda: 'id_moneda',
  nombre: 'nombre',
  tasa_cambio: 'tasa_cambio'
};

exports.Prisma.Productos_terminadosScalarFieldEnum = {
  id_producto: 'id_producto',
  nombre: 'nombre',
  precio_venta: 'precio_venta',
  stock_actual: 'stock_actual',
  codigo_barras: 'codigo_barras',
  precio_produccion: 'precio_produccion',
  id_moneda: 'id_moneda'
};

exports.Prisma.ProveedoresScalarFieldEnum = {
  id_proveedor: 'id_proveedor',
  rif: 'rif',
  nombre: 'nombre',
  contacto: 'contacto',
  telefono: 'telefono',
  direccion: 'direccion',
  empresa_nombre: 'empresa_nombre',
  fecha_registro: 'fecha_registro'
};

exports.Prisma.RecetasScalarFieldEnum = {
  id_receta: 'id_receta',
  id_producto: 'id_producto',
  id_materia_prima: 'id_materia_prima',
  cantidad_requerida: 'cantidad_requerida',
  unidad_medida: 'unidad_medida',
  disponible: 'disponible'
};

exports.Prisma.UnidadesmedidaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  factor_conversion: 'factor_conversion'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  detalle_factura: 'detalle_factura',
  facturas: 'facturas',
  ConversionFactor: 'ConversionFactor',
  kardex_materia_prima: 'kardex_materia_prima',
  kardex_productos: 'kardex_productos',
  materia_prima: 'materia_prima',
  monedas: 'monedas',
  productos_terminados: 'productos_terminados',
  proveedores: 'proveedores',
  recetas: 'recetas',
  unidadesmedida: 'unidadesmedida'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
