generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["inventario"]
}

model detalle_factura {
  id_detalle       Int             @id @default(autoincrement())
  id_factura       Int?
  id_materia_prima Int?
  cantidad         Decimal         @db.Decimal(10, 2)
  precio_unitario  Decimal         @db.Decimal(10, 2)
  subtotal         Decimal?        @db.Decimal(10, 2)
  unidad_medida    Int?
  facturas         facturas?       @relation(fields: [id_factura], references: [id_factura], onDelete: NoAction, onUpdate: NoAction)
  materia_prima    materia_prima?  @relation(fields: [id_materia_prima], references: [id_materia_prima], onDelete: NoAction, onUpdate: NoAction)
  unidadesmedida   unidadesmedida? @relation(fields: [unidad_medida], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("inventario")
}

model facturas {
  id_factura      Int               @id @default(autoincrement())
  id_proveedor    Int?
  id_moneda       Int
  fecha_factura   DateTime?         @default(now()) @db.Timestamp(6)
  total           Decimal           @db.Decimal(10, 2)
  estado          Boolean?          @default(true)
  observaciones   String?
  detalle_factura detalle_factura[]
  monedas         monedas           @relation(fields: [id_moneda], references: [id_moneda], onDelete: NoAction, onUpdate: NoAction)
  proveedores     proveedores?      @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: NoAction, onUpdate: NoAction)

  @@schema("inventario")
}

model ConversionFactor {
  id              Int      @id @default(autoincrement())
  unidadOrigen    String
  unidadDestino   String
  factorConversion Float

  @@unique([unidadOrigen, unidadDestino])
  @@schema("inventario")
}


model kardex_materia_prima {
  id_kardex        Int            @id @default(autoincrement())
  id_materia_prima Int?
  tipo_movimiento  String         @db.VarChar(50)
  cantidad         Decimal        @db.Decimal(10, 2)
  saldo            Decimal        @db.Decimal(10, 2)
  costo_unitario   Decimal        @db.Decimal(10, 2)
  costo_total      Decimal        @db.Decimal(10, 2)
  fecha_movimiento DateTime?      @default(now()) @db.Timestamp(6)
  referencia       String?        @db.VarChar(100)
  observaciones    String?
  materia_prima    materia_prima? @relation(fields: [id_materia_prima], references: [id_materia_prima], onDelete: NoAction, onUpdate: NoAction)

  @@schema("inventario")
}

model kardex_productos {
  id_kardex            Int                   @id @default(autoincrement())
  id_producto          Int?
  tipo_movimiento      String                @db.VarChar(50)
  cantidad             Decimal               @db.Decimal(10, 2)
  saldo                Decimal               @db.Decimal(10, 2)
  costo_produccion     Decimal?              @db.Decimal(10, 2)
  precio_venta         Decimal?              @db.Decimal(10, 2)
  fecha_movimiento     DateTime?             @default(now()) @db.Timestamp(6)
  referencia           String?               @db.VarChar(100)
  observaciones        String?
  productos_terminados productos_terminados? @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction)

  @@schema("inventario")
}

model materia_prima {
  id_materia_prima     Int             @id @default(autoincrement())
  nombre               String          @db.VarChar(100)
  unidad_medida_id     Int
  costo_unitario       Decimal         @db.Decimal(10, 2)
  presentacion         Decimal         @default(1)
  stock_actual         Decimal?        @default(0) @db.Decimal(10, 2)
  codigo_barras        String          @db.VarChar(100) @unique
  fecha_registro       DateTime?       @default(now()) @db.Timestamp(6)
  disponible           Boolean         @default(true)
  detalle_factura      detalle_factura[]
  kardex_materia_prima kardex_materia_prima[]
  recetas              recetas[]
  unidad_medida        unidadesmedida  @relation(fields: [unidad_medida_id], references: [id])

  @@schema("inventario")
  @@index([unidad_medida_id], name: "idx_unidad_medida")
}

model monedas {
  id_moneda            Int                    @id @default(autoincrement())
  nombre               String                 @db.VarChar
  tasa_cambio          Decimal                @db.Decimal(10, 6)
  facturas             facturas[]
  productos_terminados productos_terminados[]

  @@schema("inventario")
}

model productos_terminados {
  id_producto       Int                @id @default(autoincrement())
  nombre            String             @db.VarChar(100)
  precio_venta      Decimal            @db.Decimal(10, 2)
  stock_actual      Decimal?           @default(0) @db.Decimal(10, 2)
  codigo_barras     String
  precio_produccion Int
  id_moneda         Int
  kardex_productos  kardex_productos[]
  monedas           monedas            @relation(fields: [id_moneda], references: [id_moneda], onDelete: NoAction, onUpdate: NoAction)
  recetas           recetas[]

  @@schema("inventario")
}

model proveedores {
  id_proveedor   Int        @id @default(autoincrement())
  rif            String     @unique
  nombre         String     @db.VarChar(100)
  contacto       String?    @db.VarChar(100)
  telefono       String?    @db.VarChar(15)
  direccion      String?
  empresa_nombre String     @unique
  fecha_registro DateTime?  @default(now()) @db.Timestamp(6)
  facturas       facturas[]

  @@schema("inventario")
}

model recetas {
  id_receta            Int                   @id @default(autoincrement())
  id_producto          Int?
  id_materia_prima     Int?
  cantidad_requerida   Decimal               @db.Decimal(10, 2)
  unidad_medida        Int?
  disponible           Boolean               @default(true)
  unidadesmedida       unidadesmedida?       @relation(fields: [unidad_medida], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_recetas_unidad_medida")
  materia_prima        materia_prima?        @relation(fields: [id_materia_prima], references: [id_materia_prima], onDelete: NoAction, onUpdate: NoAction)
  productos_terminados productos_terminados? @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction)

  @@schema("inventario")
}
model unidadesmedida {
  id                Int               @id @default(autoincrement())
  nombre            String            @unique @db.VarChar
  factor_conversion Decimal           @db.Decimal(13, 6)
  detalle_factura   detalle_factura[]
  recetas           recetas[]
  materia_prima     materia_prima[]

  @@schema("inventario")
}

